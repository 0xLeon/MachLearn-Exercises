ggplot(res2, aes(x=x_values, y = y_values, col = as.factor(y_hat))) + geom_point()
install.packages(c('repr', 'IRdisplay', 'evaluate', 'crayon', 'pbdZMQ', 'devtools', 'uuid', 'digest'))
devtools::install_github('IRkernel/IRkernel')
library(MASS)
library(caret)
?multiplot
setwd("/Users/deepthought42/Documents/Studium/ML1/MachLearn-Exercises/Jupyter")
list.files()
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
library(stringr)
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i]=='character')){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('without', adult$workclass)] = 'unemployed'
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
euduc_levels = c('government-employed','self-employed','unemployed',he, hs)
head(adult$education %in% he)
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% he] = 'highschool'
euduc_levels = c(he, hs)
educ_levels = c(he, hs)
adult$education[!(adult$education %in% educ_levels)] = 'lower education'
uniqeu(adult$education)
unique(adult$education)
adult$education[adult$education %in% he] = 'highschool'
unique(adult$education)
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
head(grepl('gov', adult$workclass))
library(stringr)
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('without', adult$workclass)] = 'unemployed'
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
educ_levels = c(he, hs)
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% educ_levels)] = 'lower education'
unique(adult$education)
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
head(grepl('gov', adult$workclass))
library(stringr)
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('without', adult$workclass)] = 'unemployed'
unique(adult$workclass)
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
summary(adult)
sapply(adult, function(x) sum(is.na(x)))
adult =adult[!is.na(adult$workclass)]
adult =adult[!is.na(adult$workclass),]
sapply(adult, class)
adult_int = adult[, sapply(adult, class) == 'character']
adult_int = adult[, sapply(adult, class) == 'integer']
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
unique(adult$workclass)
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
head(grepl('gov', adult$workclass))
library(stringr)
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
summary(adult)
sapply(adult, function(x) sum(is.na(x)))
adult =adult[!is.na(adult$workclass),]
unique(adult$workclass)
unique(adult$sex)
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
head(adult2)
sapply(adult2[,7:12], mean)
adult2[,7:12] = integer(adult2[,7:12])
sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
View(adult2)
list.files()
write.csv(adult2, 'adult.data.prepared.csv')
union(adult$class)
unique(adult$class)
adult2$high_income = ifelse(adult$class == '>50k',1,0)
write.csv(adult2, 'adult.data.prepared.csv')
View(adult2)
mean(adult2$high_income)
adult2$high_income = ifelse(adult$class == '>50K',1,0)
mean(adult2$high_income)
write.csv(adult2, 'adult.data.prepared.csv')
list.files()
write.csv(adult2, 'adult.data.prepared.csv')
list.files()
adult_test = read.csv("adult.test.txt", header = F, stringsAsFactors = F)
View(adult_test)
View(adult)
unique(adult$fnlwgt)
preprocessing = function(adult){
#replace white spaces in character variables
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
#create summarizing categories for workclass
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
#summary(adult)
#sapply(adult, function(x) sum(is.na(x)))
#remove NAs
adult =adult[!is.na(adult$workclass),]
#generate new dataframe with continious variables = dummy variables
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
#make sure all to have no spelling errors
#sapply(adult2[,7:12], mean)
adult2[,7:12] = integer(adult2[,7:12])
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
return(adult2)
}
test = preprocessing(adult)
test = preprocessing(adult = adult)
setwd("/Users/deepthought42/Documents/Studium/ML1/MachLearn-Exercises/Jupyter")
list.files()
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
adult =adult[!is.na(adult$workclass),]
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
adult2[,7:12] = integer(adult2[,7:12])
adult2[,7:12] = as.integer(adult2[,7:12])
View(adult2)
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
return(adult2)
preprocessing = function(adult){
#replace white spaces in character variables
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
#create summarizing categories for workclass
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
#summary(adult)
#sapply(adult, function(x) sum(is.na(x)))
#remove NAs
adult =adult[!is.na(adult$workclass),]
#generate new dataframe with continious variables = dummy variables
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
#make sure all to have no spelling errors
#sapply(adult2[,7:12], mean)
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
return(adult2)
}
test = preprocessing(adult = adult)
test == adult2
View(test)
View(adult2)
list.files()
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
preprocessing = function(adult){
#replace white spaces in character variables
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
#create summarizing categories for workclass
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
#summary(adult)
#sapply(adult, function(x) sum(is.na(x)))
#remove NAs
adult =adult[!is.na(adult$workclass),]
#generate new dataframe with continious variables = dummy variables
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
#make sure all to have no spelling errors
#sapply(adult2[,7:12], mean)
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
return(adult2)
}
test = preprocessing(adult = adult)
View(test)
for(i in 1:ncol(adult)){
print(i)
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
adult =adult[!is.na(adult$workclass),]
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
adult2 == test
pre_processed = preprocessing(adult = adult)
adult_test = read.csv("adult.test.txt", header = F, stringsAsFactors = F)
library(stringr)
replace_all()
adult_test$V15 = str_replace_all(adult_test$V15, '.', '')
View(adult_test)
names(adult_test) = Columnames
adult_test$class = str_replace_all(adult_test$class, '.', '')
adult_test[-1,]
adult_test = adult_test[-1,]
View(test)
View(adult_test)
test_processed = preprocessing(adult = adult_test)
View(adult_test)
adult_test = read.csv("adult.test.txt", header = F, stringsAsFactors = F)
names(adult_test) = Columnames
View(adult_test)
adult_test = adult_test[-1,]
View(adult_test)
View(adult_test)
adult_test$class = str_replace_all(adult_test$class, '.', '')
View(pre_processed)
View(adult_test)
adult_test$class[1]
adult_test = read.csv("adult.test.txt", header = F, stringsAsFactors = F)
names(adult_test) = Columnames
adult_test = adult_test[-1,]
adult_test$class[1]
str_replace(adult_test$class[1],'.','')
str_replace_all(adult_test$class[1],'.','')
str_replace_all(adult_test$class[1],'/.','')
str_replace_all(adult_test$class[1],'\.','')
str_replace_all(adult_test$class[1],'//.','')
?grepl
str_replace_all(adult_test$class[1],'\\.','')
adult_test$class = str_replace_all(adult_test$class, '\\.', '')
View(adult_test)
test_processed = preprocessing(adult = adult_test)
adult = adult_test
for(i in 1:ncol(adult)){
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
adult =adult[!is.na(adult$workclass),]
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
View(adult2)
adult2 = adult[, sapply(adult, class) == 'integer']
View(adult2)
View(adult)
sapply(adult, class) == 'integer'
sapply(adult, class)
summary(adult$age)
debugSource('~/Documents/Studium/ML1/MachLearn-Exercises/Jupyter/ex3.R')
library(stringr)
preprocessing = function(adult){
#replace white spaces in character variables
for(i in 1:ncol(adult)){
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
#create summarizing categories for workclass
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
#unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
#summary(adult)
#sapply(adult, function(x) sum(is.na(x)))
#remove NAs
adult =adult[!is.na(adult$workclass),]
#generate new dataframe with continious variables = dummy variables
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
#make sure all to have no spelling errors
#sapply(adult2[,7:12], mean)
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
return(adult2)
}
pre_processed = preprocessing(adult = adult)
setwd("/Users/deepthought42/Documents/Studium/ML1/MachLearn-Exercises/Jupyter")
list.files()
adult = read.csv('adult.data.csv', header = F, stringsAsFactors = F)
Columnames = read.csv("Colnames.txt", sep =":", header = F)
Columnames = Columnames[,1]
names(adult) = Columnames
library(stringr)
preprocessing = function(adult){
#replace white spaces in character variables
for(i in 1:ncol(adult)){
if(class(adult[,i])=='character'){
adult[,i] = str_replace_all(adult[,i], ' ','')
}
}
#create summarizing categories for workclass
adult$workclass[grepl('gov', adult$workclass)] = 'government-employed'
adult$workclass[grepl('Self-emp', adult$workclass)] = 'self-employed'
adult$workclass[grepl('Never', adult$workclass)| grepl('Without', adult$workclass)] = 'unemployed'
adult$workclass[adult$workclass == '?'] = NA
#unique(adult$workclass)
he= c('Doctorate', 'Masters', 'Bachelors')
hs= c('HS-grad', 'Some-college', 'Prof-school', 'Assoc-acdm', 'Assoc-voc')
adult$education[adult$education %in% he] = 'higher education'
adult$education[adult$education %in% hs] = 'highschool'
adult$education[!(adult$education %in% c('higher education','highschool'))] = 'lower education'
unique(adult$education)
#summary(adult)
#sapply(adult, function(x) sum(is.na(x)))
#remove NAs
adult =adult[!is.na(adult$workclass),]
#generate new dataframe with continious variables = dummy variables
adult2 = adult[, sapply(adult, class) == 'integer']
adult2$higher_educ = adult$education == 'higher education'
adult2$lower_educ = adult$education == 'lower education'
adult2$is_male = adult$sex == 'Male'
adult2$gov_emp = adult$workclass == "government-employed"
adult2$private = adult$workclass == "Private"
adult2$self_emp = adult$workclass == "self-employed"
#make sure all to have no spelling errors
#sapply(adult2[,7:12], mean)
adult2[,7:12] = sapply(adult2[,7:12], function(x) x = as.integer(x))
adult2$high_income = ifelse(adult$class == '>50K',1,0)
return(adult2)
}
pre_processed = preprocessing(adult = adult)
adult_test = read.csv("adult.test.txt", header = F, stringsAsFactors = F)
names(adult_test) = Columnames
adult_test$class = str_replace_all(adult_test$class, '\\.', '')
test_processed = preprocessing(adult = adult_test)
View(test_processed)
write.csv(test_processed, "adult.test.prepared.csv")
write.csv(pre_processed, 'adult.data.prepared.csv', row.names = F)
write.csv(test_processed, "adult.test.prepared.csv", row.names = F)
